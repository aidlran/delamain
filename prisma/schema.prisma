datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Session {
  id        String   @id @default(cuid()) @db.VarChar(30)
  payload   String   @db.Text
  createdAt DateTime @default(now())
}

model User {
  id           String   @id @default(cuid()) @db.VarChar(30)
  email        String   @unique @db.VarChar(255)
  username     String   @unique @db.VarChar(24)
  passwordHash String   @db.VarChar(128)
  name         String?  @db.VarChar(255)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  RootDatas    RootData[]
  userKeyPairs UserKeyPair[]
}

model KeyPair {
  id         String   @id @default(cuid()) @db.VarChar(30)
  privateKey String   @db.Text
  publicKey  String   @db.Text
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  encryptedDataItems EncryptedData[]
  encryptedDataKeys  EncryptedDataKey[]
  userKeyPairs       UserKeyPair[]
}

model UserKeyPair {
  keyPairID String  @db.VarChar(30)
  keyPair   KeyPair @relation(fields: [keyPairID], references: [id])
  userID    String  @db.VarChar(30)
  user      User    @relation(fields: [userID], references: [id])

  @@id([keyPairID, userID])
  @@index([keyPairID])
  @@index([userID])
}

model EncryptedData {
  id             String  @id @default(cuid()) @db.VarChar(30)
  payload        String  @db.Text
  ownerKeyPairID String  @db.VarChar(30)
  ownerKeyPair   KeyPair @relation(fields: [ownerKeyPairID], references: [id])

  encryptedDataKeys EncryptedDataKey[]
  rootDatas         RootData[]

  @@index([ownerKeyPairID])
}

model EncryptedDataKey {
  encryptedDataKey String        @db.Text
  encryptedDataID  String        @db.VarChar(30)
  encryptedData    EncryptedData @relation(fields: [encryptedDataID], references: [id], onDelete: Cascade)
  keyPairID        String        @db.VarChar(30)
  keyPair          KeyPair       @relation(fields: [keyPairID], references: [id])

  @@id([encryptedDataID, keyPairID])
  @@index([encryptedDataID])
  @@index([keyPairID])
}

model App {
  id   Int    @id @default(autoincrement()) @db.SmallInt
  name String @db.VarChar(6)

  rootDatas RootData[]
}

model RootData {
  appID  Int           @db.SmallInt
  app    App           @relation(fields: [appID], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userID String        @db.VarChar(30)
  user   User          @relation(fields: [userID], references: [id], onUpdate: Cascade, onDelete: Cascade)
  dataID String        @db.VarChar(30)
  data   EncryptedData @relation(fields: [dataID], references: [id])

  @@id([appID, userID])
}
